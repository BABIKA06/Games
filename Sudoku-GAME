SIZE = 9
matrix = [
    [6,5,0,8,7,3,0,9,0],
    [0,0,3,2,5,0,0,0,8],
    [9,8,0,1,0,4,3,5,7],
    [1,0,5,0,0,0,0,0,0],
    [4,0,0,0,0,0,0,0,2],
    [0,0,0,0,0,0,5,0,3],
    [5,7,8,3,0,1,0,2,6],
    [2,0,0,0,4,8,9,0,0],
    [0,9,0,6,2,5,0,8,1]]
print("SUDOKU 9*9")
print('|-----------------------------------|')
print('|'+' 6 ' + '|'+' 5 ' + '|'+' 0 ' + '|'+' 8 ' + '|'+' 7 ' + '|'+' 3 ' + '|'+' 0 ' + '|'+' 9 ' + '|'+' 0 ' + '|')
print('|-----------------------------------|')
print('|'+' 0 ' + '|'+' 0 ' + '|'+' 3 ' + '|'+' 2 ' + '|'+' 5 ' + '|'+' 0 ' + '|'+' 0 ' + '|'+' 0 ' + '|'+' 8 ' + '|')
print('|-----------------------------------|')
print('|'+' 9 ' + '|'+' 8 ' + '|'+' 0 ' + '|'+' 1 ' + '|'+' 0 ' + '|'+' 4 ' + '|'+' 3 ' + '|'+' 5 ' + '|'+' 7 ' + '|')
print('|-----------------------------------|')
print('|'+' 1 ' + '|'+' 0 ' + '|'+' 5 ' + '|'+' 0 ' + '|'+' 0 ' + '|'+' 0 ' + '|'+' 0 ' + '|'+' 0 ' + '|'+' 0 ' + '|')
print('|-----------------------------------|')
print('|'+' 4 ' + '|'+' 0 ' + '|'+' 3 ' + '|'+' 2 ' + '|'+' 5 ' + '|'+' 0 ' + '|'+' 0 ' + '|'+' 0 ' + '|'+' 2 ' + '|')
print('|-----------------------------------|')
print('|'+' 0 ' + '|'+' 0 ' + '|'+' 0 ' + '|'+' 0 ' + '|'+' 0 ' + '|'+' 0 ' + '|'+' 5 ' + '|'+' 0 ' + '|'+' 3 ' + '|')
print('|-----------------------------------|')
print('|'+' 5 ' + '|'+' 7 ' + '|'+' 8 ' + '|'+' 3 ' + '|'+' 0 ' + '|'+' 1 ' + '|'+' 0 ' + '|'+' 2 '+ '|'+' 6 ' + '|')
print('|-----------------------------------|')
print('|'+' 2 ' + '|'+' 0 ' + '|'+' 0 ' + '|'+' 0 ' + '|'+' 4 ' + '|'+' 8 ' + '|'+' 9 ' + '|'+' 0 ' + '|'+' 0 ' + '|')
print('|-----------------------------------|')
print('|'+' 0 ' + '|'+' 9 ' + '|'+' 0 ' + '|'+' 6 ' + '|'+' 2 ' + '|'+' 5 ' + '|'+' 0 ' + '|'+' 8 ' + '|'+' 1 ' + '|')
print('|-----------------------------------|')

def print_sudoku():
    for i in range(len(matrix)):
        if i % 1 == 0:
            if i == 0:
                print('|-----------------------------------|')
            else:
                print('|---+---+---+---+---+---+---+---+---|')

        for j in range(len(matrix[0])):
            if j % 1 == 0:
                print("|", end=" ")

            if j == 8:
                print(matrix[i][j], "|")
            else:
                print(matrix[i][j], end=" ")
    print('|-----------------------------------|')

def number_unassigned(row, col):
    num_unassign = 0
    for i in range(0,SIZE):
        for j in range (0,SIZE):
            if matrix[i][j] == 0:
                row = i
                col = j
                num_unassign = 1
                a = [row, col, num_unassign]
                return a
                 
    a = [-1, -1, num_unassign]
    return a
def is_safe(n, r, c):
    for i in range(0,SIZE):
        if matrix[r][i] == n:
            return False
    for i in range(0,SIZE):
        if matrix[i][c] == n:
            return False
    row_start = (r//3)*3
    col_start = (c//3)*3
    for i in range(row_start,row_start+3):
        for j in range(col_start,col_start+3):
            if matrix[i][j]==n:

                return False
    return True
def solve_sudoku():
    row = 0
    col = 0
    a = number_unassigned(row, col)
    if a[2] == 0:
        return True    
    row = a[0]
    col = a[1]
    for i in range(1,10):
        if is_safe(i, row, col):
            matrix[row][col] = i
            if solve_sudoku():
                return True
            matrix[row][col]=0
    return False
if solve_sudoku():
    #solve_sudoku(matrix)
    print("SOLUTION")
    print_sudoku()
    
else:
    print("NO SOLUTION")
